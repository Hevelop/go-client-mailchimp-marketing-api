/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mailchimpmarketingapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostBatchesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostBatchesRequest{}

// PostBatchesRequest struct for PostBatchesRequest
type PostBatchesRequest struct {
	// An array of objects that describes operations to perform.
	Operations []Operations `json:"operations"`
}

type _PostBatchesRequest PostBatchesRequest

// NewPostBatchesRequest instantiates a new PostBatchesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostBatchesRequest(operations []Operations) *PostBatchesRequest {
	this := PostBatchesRequest{}
	this.Operations = operations
	return &this
}

// NewPostBatchesRequestWithDefaults instantiates a new PostBatchesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostBatchesRequestWithDefaults() *PostBatchesRequest {
	this := PostBatchesRequest{}
	return &this
}

// GetOperations returns the Operations field value
func (o *PostBatchesRequest) GetOperations() []Operations {
	if o == nil {
		var ret []Operations
		return ret
	}

	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value
// and a boolean to check if the value has been set.
func (o *PostBatchesRequest) GetOperationsOk() ([]Operations, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operations, true
}

// SetOperations sets field value
func (o *PostBatchesRequest) SetOperations(v []Operations) {
	o.Operations = v
}

func (o PostBatchesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostBatchesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["operations"] = o.Operations
	return toSerialize, nil
}

func (o *PostBatchesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostBatchesRequest := _PostBatchesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostBatchesRequest)

	if err != nil {
		return err
	}

	*o = PostBatchesRequest(varPostBatchesRequest)

	return err
}

type NullablePostBatchesRequest struct {
	value *PostBatchesRequest
	isSet bool
}

func (v NullablePostBatchesRequest) Get() *PostBatchesRequest {
	return v.value
}

func (v *NullablePostBatchesRequest) Set(val *PostBatchesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBatchesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBatchesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBatchesRequest(val *PostBatchesRequest) *NullablePostBatchesRequest {
	return &NullablePostBatchesRequest{value: val, isSet: true}
}

func (v NullablePostBatchesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBatchesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


