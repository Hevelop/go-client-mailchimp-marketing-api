/*
Mailchimp Marketing API

Testing ConnectedSitesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package mailchimpmarketingapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/Hevelop/go-client-mailchimp-marketing-api"
)

func Test_mailchimpmarketingapi_ConnectedSitesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ConnectedSitesAPIService DeleteConnectedSitesId", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var connectedSiteId string

		httpRes, err := apiClient.ConnectedSitesAPI.DeleteConnectedSitesId(context.Background(), connectedSiteId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConnectedSitesAPIService GetConnectedSites", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ConnectedSitesAPI.GetConnectedSites(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConnectedSitesAPIService GetConnectedSitesId", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var connectedSiteId string

		resp, httpRes, err := apiClient.ConnectedSitesAPI.GetConnectedSitesId(context.Background(), connectedSiteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConnectedSitesAPIService PostConnectedSites", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ConnectedSitesAPI.PostConnectedSites(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConnectedSitesAPIService PostConnectedSitesIdActionsVerifyScriptInstallation", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var connectedSiteId string

		httpRes, err := apiClient.ConnectedSitesAPI.PostConnectedSitesIdActionsVerifyScriptInstallation(context.Background(), connectedSiteId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
