/*
Mailchimp Marketing API

Testing TemplateFoldersAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package mailchimpmarketingapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/Hevelop/go-client-mailchimp-marketing-api"
)

func Test_mailchimpmarketingapi_TemplateFoldersAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TemplateFoldersAPIService DeleteTemplateFoldersId", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var folderId string

		httpRes, err := apiClient.TemplateFoldersAPI.DeleteTemplateFoldersId(context.Background(), folderId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplateFoldersAPIService GetTemplateFolders", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.TemplateFoldersAPI.GetTemplateFolders(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplateFoldersAPIService GetTemplateFoldersId", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var folderId string

		resp, httpRes, err := apiClient.TemplateFoldersAPI.GetTemplateFoldersId(context.Background(), folderId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplateFoldersAPIService PatchTemplateFoldersId", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var folderId string

		resp, httpRes, err := apiClient.TemplateFoldersAPI.PatchTemplateFoldersId(context.Background(), folderId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplateFoldersAPIService PostTemplateFolders", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.TemplateFoldersAPI.PostTemplateFolders(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
