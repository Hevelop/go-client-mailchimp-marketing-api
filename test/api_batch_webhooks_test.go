/*
Mailchimp Marketing API

Testing BatchWebhooksAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package mailchimpmarketingapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/Hevelop/go-client-mailchimp-marketing-api"
)

func Test_mailchimpmarketingapi_BatchWebhooksAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BatchWebhooksAPIService DeleteBatchWebhookId", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var batchWebhookId string

		httpRes, err := apiClient.BatchWebhooksAPI.DeleteBatchWebhookId(context.Background(), batchWebhookId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BatchWebhooksAPIService GetBatchWebhook", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var batchWebhookId string

		resp, httpRes, err := apiClient.BatchWebhooksAPI.GetBatchWebhook(context.Background(), batchWebhookId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BatchWebhooksAPIService GetBatchWebhooks", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BatchWebhooksAPI.GetBatchWebhooks(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BatchWebhooksAPIService PatchBatchWebhooks", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var batchWebhookId string

		resp, httpRes, err := apiClient.BatchWebhooksAPI.PatchBatchWebhooks(context.Background(), batchWebhookId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BatchWebhooksAPIService PostBatchWebhooks", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BatchWebhooksAPI.PostBatchWebhooks(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
