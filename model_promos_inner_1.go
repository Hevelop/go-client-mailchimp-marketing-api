/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mailchimpmarketingapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PromosInner1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromosInner1{}

// PromosInner1 struct for PromosInner1
type PromosInner1 struct {
	// The Promo Code
	Code string `json:"code"`
	// The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0
	AmountDiscounted float32 `json:"amount_discounted"`
	// Type of discount. For free shipping set type to fixed
	Type string `json:"type"`
}

type _PromosInner1 PromosInner1

// NewPromosInner1 instantiates a new PromosInner1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromosInner1(code string, amountDiscounted float32, type_ string) *PromosInner1 {
	this := PromosInner1{}
	this.Code = code
	this.AmountDiscounted = amountDiscounted
	this.Type = type_
	return &this
}

// NewPromosInner1WithDefaults instantiates a new PromosInner1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromosInner1WithDefaults() *PromosInner1 {
	this := PromosInner1{}
	return &this
}

// GetCode returns the Code field value
func (o *PromosInner1) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *PromosInner1) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *PromosInner1) SetCode(v string) {
	o.Code = v
}

// GetAmountDiscounted returns the AmountDiscounted field value
func (o *PromosInner1) GetAmountDiscounted() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AmountDiscounted
}

// GetAmountDiscountedOk returns a tuple with the AmountDiscounted field value
// and a boolean to check if the value has been set.
func (o *PromosInner1) GetAmountDiscountedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountDiscounted, true
}

// SetAmountDiscounted sets field value
func (o *PromosInner1) SetAmountDiscounted(v float32) {
	o.AmountDiscounted = v
}

// GetType returns the Type field value
func (o *PromosInner1) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PromosInner1) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PromosInner1) SetType(v string) {
	o.Type = v
}

func (o PromosInner1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromosInner1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["amount_discounted"] = o.AmountDiscounted
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *PromosInner1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"amount_discounted",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPromosInner1 := _PromosInner1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPromosInner1)

	if err != nil {
		return err
	}

	*o = PromosInner1(varPromosInner1)

	return err
}

type NullablePromosInner1 struct {
	value *PromosInner1
	isSet bool
}

func (v NullablePromosInner1) Get() *PromosInner1 {
	return v.value
}

func (v *NullablePromosInner1) Set(val *PromosInner1) {
	v.value = val
	v.isSet = true
}

func (v NullablePromosInner1) IsSet() bool {
	return v.isSet
}

func (v *NullablePromosInner1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromosInner1(val *PromosInner1) *NullablePromosInner1 {
	return &NullablePromosInner1{value: val, isSet: true}
}

func (v NullablePromosInner1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromosInner1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


